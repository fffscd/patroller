#基础的插件包配置，会优先加载
basePlugins:
  pre-agent-common:
    jarName: pre-agent-common
  pre-zipkin-sdk:
    jarName: pre-zipkin-sdk
#第三方插件包配置
plugins:
  pre-zipkin-plugin:
    jarName: pre-zipkin-plugin
    interceptorNames:
      - com.preapm.agent.plugin.interceptor.ZipkinInterceptor
    loadPatterns:
      - com.preapm.agent.constant.BaseConstants
      
  pre-httpclient4-plugin:
    jarName: pre-httpclient4-plugin
    interceptorNames:
      - com.preapm.agent.plugin.interceptor.Httpclient4Interceptor
    loadPatterns:
      - org.apache.http.impl.client.CloseableHttpClient
      
  pre-jdk-http-plugin:
    jarName: pre-jdk-http-plugin
    interceptorNames:
      - com.preapm.agent.plugin.interceptor.JdkConnectHttpInterceptor
      - com.preapm.agent.plugin.interceptor.JdkResponseHttpInterceptor
    loadPatterns:
      - java.net.HttpURLConnection
      
  pre-jdk-thread-class-plugin:
    jarName: pre-jdk-thread-plugin
    interceptorNames:
      - com.preapm.agent.plugin.interceptor.JdkThreadClassInterceptor
      - com.preapm.agent.plugin.interceptor.JdkThreadInterceptor
    loadPatterns:
      - com.*
          
  pre-tomcat-plugin:
    jarName: pre-tomcat-plugin
    interceptorNames:
      - com.preapm.agent.plugin.interceptor.TomcatInterceptor
    loadPatterns:
      - org.apache.catalina.core.StandardWrapperValve

  pre-jetty-plugin:
    jarName: pre-jetty-plugin
    interceptorNames:
      - com.preapm.agent.plugin.interceptor.JettyInterceptor
    loadPatterns:
      - org.eclipse.jetty.servlet.ServletHandler

  pre-logback-plugin:
    jarName: pre-logback-plugin
    interceptorNames:
      - com.preapm.agent.plugin.interceptor.LogbackInterceptor
    loadPatterns:
      - ch.qos.logback.core.joran.action.AppenderAction
      
  pre-log4j2-plugin:
    jarName: pre-log4j2-plugin
    interceptorNames:
      - com.preapm.agent.plugin.interceptor.Log4j2Interceptor
    loadPatterns:
      - org.apache.logging.log4j.core.LoggerContext   
  
  pre-log4j-plugin:
    jarName: pre-log4j-plugin
    interceptorNames:
      - com.preapm.agent.plugin.interceptor.Log4jInterceptor
    loadPatterns:
      - org.apache.log4j.Logger
      
  pre-okhttp-plugin:
    jarName: pre-okhttp-plugin
    interceptorNames:
      - com.preapm.agent.plugin.interceptor.OkHttpInterceptor
    loadPatterns:
      - okhttp3.OkHttpClient$Builder
    
  pre-druid-plugin:
    jarName: pre-druid-plugin
    interceptorNames:
      - com.preapm.agent.plugin.interceptor.DruidInterceptor
    loadPatterns:
      - com.alibaba.druid.pool.DruidDataSource
   
  pre-mysql-jdbc-driver-plugin:
    jarName: pre-mysql-jdbc-driver-plugin
    interceptorNames:
      - com.preapm.agent.plugin.interceptor.MySQLInterceptor
    loadPatterns:
      - com.mysql.jdbc.Connection 

---
#AOP切面配置，类似sparing aop配置
patterns:
  tomcat:
    #插件织入匹配方法路径，支持正则表达式（这里一般配置包名称或者类名称）
    patterns:
      - org.apache.catalina.core.StandardWrapperValve
      # - javax.servlet.http.HttpServlet
      #- org.apache.catalina.servlets.DefaultServlet
    #排除匹配
    excludedPatterns:
    #包含匹配
    includedPatterns:
       - key: org.apache.catalina.core.StandardWrapperValve.invoke\(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response\)
       # - key: javax.servlet.http.HttpServlet.service\(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse\)
       # - key: .*service\(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse\)
    interceptors:
      - com.preapm.agent.plugin.interceptor.TomcatInterceptor

  jetty:
      patterns:
        - org.eclipse.jetty.servlet.ServletHandler
      excludedPatterns:
      includedPatterns:
         - key: org.eclipse.jetty.servlet.ServletHandler.doHandle\(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse\)
      interceptors:
        - com.preapm.agent.plugin.interceptor.JettyInterceptor

  httpClient4:
    patterns:
      - org.apache.http.impl.client.InternalHttpClient
      - org.apache.http.impl.client.MinimalHttpClient
      - org.apache.http.impl.client.AbstractHttpClient
    excludedPatterns:
    includedPatterns:
        #- key: org.apache.http.impl.client.InternalHttpClient.doExecute\(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext\)
        - key: .*doExecute.*
    interceptors:
      - com.preapm.agent.plugin.interceptor.Httpclient4Interceptor
      
  jdk-http:
    patterns:
      - sun.net.www.protocol.http.HttpURLConnection
      - sun.net.www.protocol.https.DelegateHttpsURLConnection
      - sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection
      - java.net.HttpURLConnection
    excludedPatterns:
    includedPatterns:
        #- key: sun.net.www.protocol.http.HttpURLConnection\(java.net.URL\)
        #- key: sun.net.www.protocol.http.HttpURLConnection\(java.net.URL,sun.net.www.protocol.http.Handler\) 
        #- key: sun.net.www.protocol.http.HttpURLConnection\(java.net.URL,java.net.Proxy\)
        #- key: sun.net.www.protocol.http.HttpURLConnection\(java.net.URL,java.lang.String,int\)
        - key: sun.net.www.protocol.http.HttpURLConnection\(java.net.URL,java.net.Proxy,sun.net.www.protocol.http.Handler\)
          interceptors:
           - com.preapm.agent.plugin.interceptor.JdkConnectHttpInterceptor
        - key: .*getInputStream\(\)   
          interceptors:
          - com.preapm.agent.plugin.interceptor.JdkResponseHttpInterceptor 

  logback:
    patterns:
      - ch.qos.logback.core.joran.action.AppenderAction
    excludedPatterns:
    includedPatterns:
      - key: ch.qos.logback.core.joran.action.AppenderAction.begin\(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes\)
    interceptors:
      - com.preapm.agent.plugin.interceptor.LogbackInterceptor
      
  log4j2:
    patterns:
      - org.apache.logging.log4j.core.LoggerContext
    excludedPatterns:
    includedPatterns:
      - key: org.apache.logging.log4j.core.LoggerContext.setConfiguration.*
    interceptors:
      - com.preapm.agent.plugin.interceptor.Log4j2Interceptor
      
  log4j:
    patterns:
      - org.apache.log4j.*Configurator
    excludedPatterns:
    includedPatterns:
      - key: org.apache.log4j.*parseAppender\(.*
    interceptors:
      - com.preapm.agent.plugin.interceptor.Log4jInterceptor    

  okhttp:
    patterns:
      - okhttp3.OkHttpClient\$Builder
    excludedPatterns:
    includedPatterns:
      - key: okhttp3.OkHttpClient\$Builder\(\)
    interceptors:
      - com.preapm.agent.plugin.interceptor.OkHttpInterceptor
      
  durid:
      patterns:
        - com.alibaba.druid.pool.DruidDataSource
      #排除匹配路径
      excludedPatterns:
      includedPatterns:
        - key:
           com.alibaba.druid.pool.DruidDataSource.getConnection\(long\)
          interceptors:
           - com.preapm.agent.plugin.interceptor.ZipkinInterceptor 
       # - key:
       #    com.alibaba.druid.pool.DruidDataSource\(\)
       #   interceptors:
       #     - com.preapm.agent.plugin.interceptor.DruidInterceptor
     
  mysql-jdbc-driver:
    patterns:
      - com.mysql.jdbc.ConnectionImpl
    excludedPatterns:
    includedPatterns:
      - key: com.mysql.jdbc.ConnectionImpl.initializeSafeStatementInterceptors\(\)
    interceptors:
      - com.preapm.agent.plugin.interceptor.MySQLInterceptor     
      
  jedis:
    patterns:
      - redis.clients.jedis.BinaryJedis
      - redis.clients.jedis.BinaryJedisCluster
    excludedPatterns:
       - key: ping.*
       - key: close.*
       - key: disconnect.*
       - key: resetState.*
       - key: getClient.*
       - key: setClient.*
       - key: getDB.*
       - key: isInMulti.*
       - key: isInWatch.*
       - key: clear.*
       - key: pipelined.*
       - key: setDb.*
       - key: setDataSource.*
       - key: getClusterNodes.*
       - key: getConnectionFromSlot.*
    includedPatterns:
      - key: get.*
      - key: set.*
      - key: e.*
      - key: h.*
      - key: z.*
      - key: eval.*
    interceptors:
      - com.preapm.agent.plugin.interceptor.ZipkinInterceptor    
      
  #==========================================================一下是具体业务配置根据具体项目路径修改================================     
  
  jdk-thead-class:
    patterns:
      - com.preapm.sdk.zipkin.ThreadLocal3Test.*
      - com.*.service.impl.*
      - com.*Controller.*
    excludedPatterns:
    includedPatterns:
    interceptors:
        - com.preapm.agent.plugin.interceptor.JdkThreadClassInterceptor
    superClass:
        - java.util.concurrent.Callable
        - java.lang.Runnable
    type: class
        
  #业务controller配置
  pre-controller:
    patterns:
      - com.preapm.sdk.zipkin.ThreadLocal3Test.*
      - com.*Controller
      - org.exampledriven.*Controller
    excludedPatterns:
      #- key: .*ThreadLocal3Test.*\(\)
      #- key: .*Controller.*\(\)
    includedPatterns:
      #- key: .*(run\(\)|call\(\))
      #  interceptors:
      #     - com.preapm.agent.plugin.interceptor.JdkThreadInterceptor
      - key: .*
        interceptors:
           - com.preapm.agent.plugin.interceptor.ZipkinInterceptor
    interceptors:
      - com.preapm.agent.plugin.interceptor.ZipkinInterceptor
    track:
           inParam: true
           outParam: true
           time: -1 
           serialize: fastjson 
    consMethod: false         
  #业务service配置    
  pre-service:
    patterns:
      - com.*.service.impl.*
    excludedPatterns:
    includedPatterns:
      #- key: .*(run\(\)|call\(\))
      #  interceptors:
      #     - com.preapm.agent.plugin.interceptor.JdkThreadInterceptor
      - key: .*
        interceptors:
           - com.preapm.agent.plugin.interceptor.ZipkinInterceptor
    interceptors:
      - com.preapm.agent.plugin.interceptor.ZipkinInterceptor
    track:
           inParam: true #记录入参
           outParam: true #记录出参
           time: -1    #不设置时间限制   
           serialize: fastjson
    consMethod: false                 
  #agent测试配置    
  test:
      #插件织入匹配方法路径，支持正则表达式
      patterns:
        - com.preapm.agent.Bootstrap
      #排除匹配路径
      excludedPatterns:  
       - key: com.preapm.agent.Bootstrap\(\)
      includedPatterns:
      - key:  .*
      interceptors:
        - com.preapm.agent.plugin.interceptor.ZipkinInterceptor
      track:
           inParam: false
           outParam: true
           time: -1 